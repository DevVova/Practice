package feed

import kotlinx.serialization.Serializable

fun main() {

}

@Serializable
data class Candlestick(
    val openTime: Long,//Время открытия свечи в миллисекундах с начала эпохи Unix (01.01.1970).
    val open: String,//Цена открытия свечи. Обычно представляется как строка, чтобы избежать потери точности при работе с десятичными числами.
    val high: String,//Наивысшая цена свечи за выбранный интервал времени.
    val low: String,//Наименьшая цена свечи за выбранный интервал времени.
    val close: String,//Цена закрытия свечи. Это цена, на которой завершился торговый период.
    val volume: String,//Количество базового актива, которое было куплено и продано. Например, для пары SOL/USDT объем будет представлен в SOL (базовый актив).
    val closeTime: Long,//Время закрытия свечи в миллисекундах с начала эпохи Unix.
    val quoteAssetVolume: String,/*
                                   Весь объём котируемых активов. Что такое котируемый актив?
                                   Котируемый актив — это актив, в котором измеряется
                                   стоимость базового актива. В паре SOL/USDT:
                                   Базовый актив: SOL (криптовалюта, которую вы хотите купить или продать).
                                   Котируемый актив: USDT (стабильная монета, которая используется для
                                   оценки стоимости SOL).
                                   */
    val numberOfTrades: Int,//Общее количество сделок, совершенных за период свечи.
    val takerBuyBaseAssetVolume: String,//Объём купленного базового актива.
    val takerBuyQuoteAssetVolume: String,//Объём купленного котируемого актива.
    val ignore: String/*
                        Параметр, который обычно игнорируется при анализе данных.
                        В контексте Binance API он может использоваться для передачи
                        дополнительных данных, которые не являются важными для пользователей.
                       */
)